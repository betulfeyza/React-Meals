{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadCustomRoutes;\nexports.normalizeRouteRegex = normalizeRouteRegex;\nexports.checkCustomRoutes = checkCustomRoutes;\nvar _chalk = _interopRequireDefault(require(\"./chalk\"));\nvar _escapeRegexp = require(\"../shared/lib/escape-regexp\");\nvar _tryToParsePath = require(\"./try-to-parse-path\");\nvar _redirectStatus = require(\"./redirect-status\");\nasync function loadCustomRoutes(config) {\n  const [headers, rewrites, redirects] = await Promise.all([loadHeaders(config), loadRewrites(config), loadRedirects(config)]);\n  const totalRewrites = rewrites.beforeFiles.length + rewrites.afterFiles.length + rewrites.fallback.length;\n  const totalRoutes = headers.length + redirects.length + totalRewrites;\n  if (totalRoutes > 1000) {\n    console.warn(_chalk.default.bold.yellow(`Warning: `) + `total number of custom routes exceeds 1000, this can reduce performance. Route counts:\\n` + `headers: ${headers.length}\\n` + `rewrites: ${totalRewrites}\\n` + `redirects: ${redirects.length}\\n` + `See more info: https://nextjs.org/docs/messages/max-custom-routes-reached`);\n  }\n  if (!config.skipTrailingSlashRedirect) {\n    if (config.trailingSlash) {\n      redirects.unshift({\n        source: \"/:file((?!\\\\.well-known(?:/.*)?)(?:[^/]+/)*[^/]+\\\\.\\\\w+)/\",\n        destination: \"/:file\",\n        permanent: true,\n        locale: config.i18n ? false : undefined,\n        internal: true,\n        // don't run this redirect for _next/data requests\n        missing: [{\n          type: \"header\",\n          key: \"x-nextjs-data\"\n        }]\n      }, {\n        source: \"/:notfile((?!\\\\.well-known(?:/.*)?)(?:[^/]+/)*[^/\\\\.]+)\",\n        destination: \"/:notfile/\",\n        permanent: true,\n        locale: config.i18n ? false : undefined,\n        internal: true\n      });\n      if (config.basePath) {\n        redirects.unshift({\n          source: config.basePath,\n          destination: config.basePath + \"/\",\n          permanent: true,\n          basePath: false,\n          locale: config.i18n ? false : undefined,\n          internal: true\n        });\n      }\n    } else {\n      redirects.unshift({\n        source: \"/:path+/\",\n        destination: \"/:path+\",\n        permanent: true,\n        locale: config.i18n ? false : undefined,\n        internal: true\n      });\n      if (config.basePath) {\n        redirects.unshift({\n          source: config.basePath + \"/\",\n          destination: config.basePath,\n          permanent: true,\n          basePath: false,\n          locale: config.i18n ? false : undefined,\n          internal: true\n        });\n      }\n    }\n  }\n  return {\n    headers,\n    rewrites,\n    redirects\n  };\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst allowedHasTypes = new Set([\"header\", \"cookie\", \"query\", \"host\"]);\nconst namedGroupsRegex = /\\(\\?<([a-zA-Z][a-zA-Z0-9]*)>/g;\nfunction normalizeRouteRegex(regex) {\n  // clean up un-necessary escaping from regex.source which turns / into \\\\/\n  return regex.replace(/\\\\\\//g, \"/\");\n}\nfunction checkRedirect(route) {\n  const invalidParts = [];\n  let hadInvalidStatus = false;\n  if (route.statusCode && !_redirectStatus.allowedStatusCodes.has(route.statusCode)) {\n    hadInvalidStatus = true;\n    invalidParts.push(`\\`statusCode\\` is not undefined or valid statusCode`);\n  }\n  if (typeof route.permanent !== \"boolean\" && !route.statusCode) {\n    invalidParts.push(`\\`permanent\\` is not set to \\`true\\` or \\`false\\``);\n  }\n  return {\n    invalidParts,\n    hadInvalidStatus\n  };\n}\nfunction checkHeader(route) {\n  const invalidParts = [];\n  if (!Array.isArray(route.headers)) {\n    invalidParts.push(\"`headers` field must be an array\");\n  } else if (route.headers.length === 0) {\n    invalidParts.push(\"`headers` field cannot be empty\");\n  } else {\n    for (const header of route.headers) {\n      if (!header || typeof header !== \"object\") {\n        invalidParts.push(\"`headers` items must be object with { key: '', value: '' }\");\n        break;\n      }\n      if (typeof header.key !== \"string\") {\n        invalidParts.push(\"`key` in header item must be string\");\n        break;\n      }\n      if (typeof header.value !== \"string\") {\n        invalidParts.push(\"`value` in header item must be string\");\n        break;\n      }\n    }\n  }\n  return invalidParts;\n}\nfunction checkCustomRoutes(routes, type) {\n  if (!Array.isArray(routes)) {\n    console.error(`Error: ${type}s must return an array, received ${typeof routes}.\\n` + `See here for more info: https://nextjs.org/docs/messages/routes-must-be-array`);\n    process.exit(1);\n  }\n  let numInvalidRoutes = 0;\n  let hadInvalidStatus = false;\n  let hadInvalidHas = false;\n  let hadInvalidMissing = false;\n  const allowedKeys = new Set([\"source\", \"locale\", \"has\", \"missing\"]);\n  if (type === \"rewrite\") {\n    allowedKeys.add(\"basePath\");\n    allowedKeys.add(\"destination\");\n  }\n  if (type === \"redirect\") {\n    allowedKeys.add(\"basePath\");\n    allowedKeys.add(\"statusCode\");\n    allowedKeys.add(\"permanent\");\n    allowedKeys.add(\"destination\");\n  }\n  if (type === \"header\") {\n    allowedKeys.add(\"basePath\");\n    allowedKeys.add(\"headers\");\n  }\n  for (const route of routes) {\n    if (!route || typeof route !== \"object\") {\n      console.error(`The route ${JSON.stringify(route)} is not a valid object with \\`source\\`${type !== \"middleware\" ? ` and \\`${type === \"header\" ? \"headers\" : \"destination\"}\\`` : \"\"}`);\n      numInvalidRoutes++;\n      continue;\n    }\n    if (type === \"rewrite\" && route.basePath === false && !(route.destination.startsWith(\"http://\") || route.destination.startsWith(\"https://\"))) {\n      console.error(`The route ${route.source} rewrites urls outside of the basePath. Please use a destination that starts with \\`http://\\` or \\`https://\\` https://nextjs.org/docs/messages/invalid-external-rewrite`);\n      numInvalidRoutes++;\n      continue;\n    }\n    const keys = Object.keys(route);\n    const invalidKeys = keys.filter(key => !allowedKeys.has(key));\n    const invalidParts = [];\n    if (\"basePath\" in route && typeof route.basePath !== \"undefined\" && route.basePath !== false) {\n      invalidParts.push(\"`basePath` must be undefined or false\");\n    }\n    if (typeof route.locale !== \"undefined\" && route.locale !== false) {\n      invalidParts.push(\"`locale` must be undefined or false\");\n    }\n    const checkInvalidHasMissing = (items, fieldName) => {\n      let hadInvalidItem = false;\n      if (typeof items !== \"undefined\" && !Array.isArray(items)) {\n        invalidParts.push(`\\`${fieldName}\\` must be undefined or valid has object`);\n        hadInvalidItem = true;\n      } else if (items) {\n        const invalidHasItems = [];\n        for (const hasItem of items) {\n          let invalidHasParts = [];\n          if (!allowedHasTypes.has(hasItem.type)) {\n            invalidHasParts.push(`invalid type \"${hasItem.type}\"`);\n          }\n          if (typeof hasItem.key !== \"string\" && hasItem.type !== \"host\") {\n            invalidHasParts.push(`invalid key \"${hasItem.key}\"`);\n          }\n          if (typeof hasItem.value !== \"undefined\" && typeof hasItem.value !== \"string\") {\n            invalidHasParts.push(`invalid value \"${hasItem.value}\"`);\n          }\n          if (typeof hasItem.value === \"undefined\" && hasItem.type === \"host\") {\n            invalidHasParts.push(`value is required for \"host\" type`);\n          }\n          if (invalidHasParts.length > 0) {\n            invalidHasItems.push(`${invalidHasParts.join(\", \")} for ${JSON.stringify(hasItem)}`);\n          }\n        }\n        if (invalidHasItems.length > 0) {\n          hadInvalidItem = true;\n          const itemStr = `item${invalidHasItems.length === 1 ? \"\" : \"s\"}`;\n          console.error(`Invalid \\`${fieldName}\\` ${itemStr}:\\n` + invalidHasItems.join(\"\\n\"));\n          console.error();\n          invalidParts.push(`invalid \\`${fieldName}\\` ${itemStr} found`);\n        }\n      }\n      return hadInvalidItem;\n    };\n    if (checkInvalidHasMissing(route.has, \"has\")) {\n      hadInvalidHas = true;\n    }\n    if (checkInvalidHasMissing(route.missing, \"missing\")) {\n      hadInvalidMissing = true;\n    }\n    if (!route.source) {\n      invalidParts.push(\"`source` is missing\");\n    } else if (typeof route.source !== \"string\") {\n      invalidParts.push(\"`source` is not a string\");\n    } else if (!route.source.startsWith(\"/\")) {\n      invalidParts.push(\"`source` does not start with /\");\n    }\n    if (type === \"header\") {\n      invalidParts.push(...checkHeader(route));\n    } else if (type !== \"middleware\") {\n      let _route = route;\n      if (!_route.destination) {\n        invalidParts.push(\"`destination` is missing\");\n      } else if (typeof _route.destination !== \"string\") {\n        invalidParts.push(\"`destination` is not a string\");\n      } else if (type === \"rewrite\" && !_route.destination.match(/^(\\/|https:\\/\\/|http:\\/\\/)/)) {\n        invalidParts.push(\"`destination` does not start with `/`, `http://`, or `https://`\");\n      }\n    }\n    if (type === \"redirect\") {\n      const result = checkRedirect(route);\n      hadInvalidStatus = hadInvalidStatus || result.hadInvalidStatus;\n      invalidParts.push(...result.invalidParts);\n    }\n    let sourceTokens;\n    if (typeof route.source === \"string\" && route.source.startsWith(\"/\")) {\n      // only show parse error if we didn't already show error\n      // for not being a string\n      const {\n        tokens,\n        error,\n        regexStr\n      } = (0, _tryToParsePath).tryToParsePath(route.source);\n      if (error) {\n        invalidParts.push(\"`source` parse failed\");\n      }\n      if (regexStr && regexStr.length > 4096) {\n        invalidParts.push(\"`source` exceeds max built length of 4096\");\n      }\n      sourceTokens = tokens;\n    }\n    const hasSegments = new Set();\n    if (route.has) {\n      for (const hasItem of route.has) {\n        if (!hasItem.value && hasItem.key) {\n          hasSegments.add(hasItem.key);\n        }\n        if (hasItem.value) {\n          for (const match of hasItem.value.matchAll(namedGroupsRegex)) {\n            if (match[1]) {\n              hasSegments.add(match[1]);\n            }\n          }\n          if (hasItem.type === \"host\") {\n            hasSegments.add(\"host\");\n          }\n        }\n      }\n    }\n    // make sure no unnamed patterns are attempted to be used in the\n    // destination as this can cause confusion and is not allowed\n    if (typeof route.destination === \"string\") {\n      if (route.destination.startsWith(\"/\") && Array.isArray(sourceTokens)) {\n        const unnamedInDest = new Set();\n        for (const token of sourceTokens) {\n          if (typeof token === \"object\" && typeof token.name === \"number\") {\n            const unnamedIndex = new RegExp(`:${token.name}(?!\\\\d)`);\n            if (route.destination.match(unnamedIndex)) {\n              unnamedInDest.add(`:${token.name}`);\n            }\n          }\n        }\n        if (unnamedInDest.size > 0) {\n          invalidParts.push(`\\`destination\\` has unnamed params ${[...unnamedInDest].join(\", \")}`);\n        } else {\n          const {\n            tokens: destTokens,\n            regexStr: destRegexStr,\n            error: destinationParseFailed\n          } = (0, _tryToParsePath).tryToParsePath(route.destination, {\n            handleUrl: true\n          });\n          if (destRegexStr && destRegexStr.length > 4096) {\n            invalidParts.push(\"`destination` exceeds max built length of 4096\");\n          }\n          if (destinationParseFailed) {\n            invalidParts.push(\"`destination` parse failed\");\n          } else {\n            const sourceSegments = new Set(sourceTokens.map(item => typeof item === \"object\" && item.name).filter(Boolean));\n            const invalidDestSegments = new Set();\n            for (const token of destTokens) {\n              if (typeof token === \"object\" && !sourceSegments.has(token.name) && !hasSegments.has(token.name)) {\n                invalidDestSegments.add(token.name);\n              }\n            }\n            if (invalidDestSegments.size) {\n              invalidParts.push(`\\`destination\\` has segments not in \\`source\\` or \\`has\\` (${[...invalidDestSegments].join(\", \")})`);\n            }\n          }\n        }\n      }\n    }\n    const hasInvalidKeys = invalidKeys.length > 0;\n    const hasInvalidParts = invalidParts.length > 0;\n    if (hasInvalidKeys || hasInvalidParts) {\n      console.error(`${invalidParts.join(\", \")}${invalidKeys.length ? (hasInvalidParts ? \",\" : \"\") + ` invalid field${invalidKeys.length === 1 ? \"\" : \"s\"}: ` + invalidKeys.join(\",\") : \"\"} for route ${JSON.stringify(route)}`);\n      console.error();\n      numInvalidRoutes++;\n    }\n  }\n  if (numInvalidRoutes > 0) {\n    if (hadInvalidStatus) {\n      console.error(`\\nValid redirect statusCode values are ${[..._redirectStatus.allowedStatusCodes].join(\", \")}`);\n    }\n    if (hadInvalidHas) {\n      console.error(`\\nValid \\`has\\` object shape is ${JSON.stringify({\n        type: [...allowedHasTypes].join(\", \"),\n        key: \"the key to check for\",\n        value: \"undefined or a value string to match against\"\n      }, null, 2)}`);\n    }\n    if (hadInvalidMissing) {\n      console.error(`\\nValid \\`missing\\` object shape is ${JSON.stringify({\n        type: [...allowedHasTypes].join(\", \"),\n        key: \"the key to check for\",\n        value: \"undefined or a value string to match against\"\n      }, null, 2)}`);\n    }\n    console.error();\n    console.error(`Error: Invalid ${type}${numInvalidRoutes === 1 ? \"\" : \"s\"} found`);\n    process.exit(1);\n  }\n}\nfunction processRoutes(routes, config, type) {\n  const _routes = routes;\n  const newRoutes = [];\n  const defaultLocales = [];\n  if (config.i18n && type === \"redirect\") {\n    var ref;\n    for (const item of ((ref = config.i18n) == null ? void 0 : ref.domains) || []) {\n      defaultLocales.push({\n        locale: item.defaultLocale,\n        base: `http${item.http ? \"\" : \"s\"}://${item.domain}`\n      });\n    }\n    defaultLocales.push({\n      locale: config.i18n.defaultLocale,\n      base: \"\"\n    });\n  }\n  for (const r of _routes) {\n    var ref1;\n    const srcBasePath = config.basePath && r.basePath !== false ? config.basePath : \"\";\n    const isExternal = !((ref1 = r.destination) == null ? void 0 : ref1.startsWith(\"/\"));\n    const destBasePath = srcBasePath && !isExternal ? srcBasePath : \"\";\n    if (config.i18n && r.locale !== false) {\n      var ref2;\n      if (!isExternal) {\n        defaultLocales.forEach(item => {\n          let destination;\n          if (r.destination) {\n            destination = item.base ? `${item.base}${destBasePath}${r.destination}` : `${destBasePath}${r.destination}`;\n          }\n          newRoutes.push({\n            ...r,\n            destination,\n            source: `${srcBasePath}/${item.locale}${r.source === \"/\" && !config.trailingSlash ? \"\" : r.source}`\n          });\n        });\n      }\n      r.source = `/:nextInternalLocale(${config.i18n.locales.map(locale => (0, _escapeRegexp).escapeStringRegexp(locale)).join(\"|\")})${r.source === \"/\" && !config.trailingSlash ? \"\" : r.source}`;\n      if (r.destination && ((ref2 = r.destination) == null ? void 0 : ref2.startsWith(\"/\"))) {\n        r.destination = `/:nextInternalLocale${r.destination === \"/\" && !config.trailingSlash ? \"\" : r.destination}`;\n      }\n    }\n    r.source = `${srcBasePath}${r.source === \"/\" && srcBasePath ? \"\" : r.source}`;\n    if (r.destination) {\n      r.destination = `${destBasePath}${r.destination === \"/\" && destBasePath ? \"\" : r.destination}`;\n    }\n    newRoutes.push(r);\n  }\n  return newRoutes;\n}\nasync function loadRedirects(config) {\n  if (typeof config.redirects !== \"function\") {\n    return [];\n  }\n  let redirects = await config.redirects();\n  // check before we process the routes and after to ensure\n  // they are still valid\n  checkCustomRoutes(redirects, \"redirect\");\n  // save original redirects before transforms\n  if (Array.isArray(redirects)) {\n    config._originalRedirects = redirects.map(r => ({\n      ...r\n    }));\n  }\n  redirects = processRoutes(redirects, config, \"redirect\");\n  checkCustomRoutes(redirects, \"redirect\");\n  return redirects;\n}\nasync function loadRewrites(config) {\n  if (typeof config.rewrites !== \"function\") {\n    return {\n      beforeFiles: [],\n      afterFiles: [],\n      fallback: []\n    };\n  }\n  const _rewrites = await config.rewrites();\n  let beforeFiles = [];\n  let afterFiles = [];\n  let fallback = [];\n  if (!Array.isArray(_rewrites) && typeof _rewrites === \"object\" && Object.keys(_rewrites).every(key => key === \"beforeFiles\" || key === \"afterFiles\" || key === \"fallback\")) {\n    beforeFiles = _rewrites.beforeFiles || [];\n    afterFiles = _rewrites.afterFiles || [];\n    fallback = _rewrites.fallback || [];\n  } else {\n    afterFiles = _rewrites;\n  }\n  // check before we process the routes and after to ensure\n  // they are still valid\n  checkCustomRoutes(beforeFiles, \"rewrite\");\n  checkCustomRoutes(afterFiles, \"rewrite\");\n  checkCustomRoutes(fallback, \"rewrite\");\n  config._originalRewrites = {\n    beforeFiles: beforeFiles.map(r => ({\n      ...r\n    })),\n    afterFiles: afterFiles.map(r => ({\n      ...r\n    })),\n    fallback: fallback.map(r => ({\n      ...r\n    }))\n  };\n  beforeFiles = processRoutes(beforeFiles, config, \"rewrite\");\n  afterFiles = processRoutes(afterFiles, config, \"rewrite\");\n  fallback = processRoutes(fallback, config, \"rewrite\");\n  checkCustomRoutes(beforeFiles, \"rewrite\");\n  checkCustomRoutes(afterFiles, \"rewrite\");\n  checkCustomRoutes(fallback, \"rewrite\");\n  return {\n    beforeFiles,\n    afterFiles,\n    fallback\n  };\n}\nasync function loadHeaders(config) {\n  if (typeof config.headers !== \"function\") {\n    return [];\n  }\n  let headers = await config.headers();\n  // check before we process the routes and after to ensure\n  // they are still valid\n  checkCustomRoutes(headers, \"header\");\n  headers = processRoutes(headers, config, \"header\");\n  checkCustomRoutes(headers, \"header\");\n  return headers;\n}","map":{"version":3,"names":["loadCustomRoutes","normalizeRouteRegex","checkCustomRoutes","_chalk","_interopRequireDefault","require","_escapeRegexp","_tryToParsePath","_redirectStatus","config","headers","rewrites","redirects","Promise","all","loadHeaders","loadRewrites","loadRedirects","totalRewrites","beforeFiles","length","afterFiles","fallback","totalRoutes","console","warn","default","bold","yellow","skipTrailingSlashRedirect","trailingSlash","unshift","source","destination","permanent","locale","i18n","undefined","internal","missing","type","key","basePath","allowedHasTypes","Set","namedGroupsRegex","regex","replace","checkRedirect","route","invalidParts","hadInvalidStatus","statusCode","allowedStatusCodes","has","push","checkHeader","Array","isArray","header","value","routes","error","process","exit","numInvalidRoutes","hadInvalidHas","hadInvalidMissing","allowedKeys","add","JSON","stringify","startsWith","keys","Object","invalidKeys","filter","checkInvalidHasMissing","items","fieldName","hadInvalidItem","invalidHasItems","hasItem","invalidHasParts","join","itemStr","_route","match","result","sourceTokens","tokens","regexStr","tryToParsePath","hasSegments","matchAll","unnamedInDest","token","name","unnamedIndex","RegExp","size","destTokens","destRegexStr","destinationParseFailed","handleUrl","sourceSegments","map","item","Boolean","invalidDestSegments","hasInvalidKeys","hasInvalidParts","processRoutes","_routes","newRoutes","defaultLocales","ref","domains","defaultLocale","base","http","domain","r","ref1","srcBasePath","isExternal","destBasePath","ref2","forEach","locales","escapeStringRegexp","_originalRedirects","_rewrites","every","_originalRewrites"],"sources":["../../src/lib/load-custom-routes.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}